/*
 * Generated by ASN.1 Java Compiler (https://www.asnlab.org/)
 * From ASN.1 module "Platoon"
 */
package com.iot.nero.smartcan.entity.platoon;

import java.io.*;

import org.asnlab.asndt.runtime.conv.*;
import org.asnlab.asndt.runtime.conv.annotation.*;
import org.asnlab.asndt.runtime.type.AsnType;

public class Other {

	@Component(0)
	public Double outsidetemp;

	@Component(1)
	public HANDBRAKE handbrake;

	@Component(2)
	public AutoHorn autohorn;

	@Component(3)
	public Integer isautodrive;

	@Component(4)
	public byte[] faultcode;


	public boolean equals(Object obj) {
		if(!(obj instanceof Other)){
			return false;
		}
		return TYPE.equals(this, obj, CONV);
	}

	public void print(PrintStream out) {
		TYPE.print(this, CONV, out);
	}

	public void ber_encode(OutputStream out) throws IOException {
		TYPE.encode(this, EncodingRules.BASIC_ENCODING_RULES, CONV, out);
	}

	public static Other ber_decode(InputStream in) throws IOException {
		return (Other)TYPE.decode(in, EncodingRules.BASIC_ENCODING_RULES, CONV);
	}


	public final static AsnType TYPE = Platoon.type(65578);

	public final static CompositeConverter CONV;

	static {
		CONV = new AnnotationCompositeConverter(Other.class);
		AsnConverter outsidetempConverter = DoubleConverter.INSTANCE;
		AsnConverter handbrakeConverter = HANDBRAKE.CONV;
		AsnConverter autohornConverter = AutoHorn.CONV;
		AsnConverter isautodriveConverter = IntegerConverter.INSTANCE;
		AsnConverter faultcodeConverter = OctetStringConverter.INSTANCE;
		CONV.setComponentConverters(new AsnConverter[] { outsidetempConverter, handbrakeConverter, autohornConverter, isautodriveConverter, faultcodeConverter });
	}


}
